prompt --application/deployment/install/upgrade_populate_flex_registry
begin
wwv_flow_api.create_install_script(
 p_id=>wwv_flow_api.id(14880216919627714325)
,p_install_id=>wwv_flow_api.id(17817343456864234187)
,p_name=>'Populate Flex Registry'
,p_sequence=>190
,p_script_type=>'UPGRADE'
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'declare',
'    type postfixes_t is table of varchar2(30);',
'    l_postfixes postfixes_t := postfixes_t(',
'                          ''01'',''02'',''03'',''04'',',
'                          ''05'',''06'',''07'',''08'',',
'                          ''N01'',''N02'',''N03'',''N04'',',
'                          ''D01'',''D02'',''D03'',''D04'',',
'                          ''CLOB'');',
'',
'    type table_r is record (',
'        table_name        varchar2(30)',
'    );',
'    type tables_t is table of table_r index by varchar2(30);',
'    l_tables tables_t;',
'',
'    l_tbl varchar2(30);',
'begin',
'    l_tables(''CUSTOMER'').table_name := ''EBA_CUST_CUSTOMERS'';',
'    --',
'    l_tables(''CONTACT'').table_name  := ''EBA_CUST_CONTACTS'';',
'    --',
'    l_tables(''PRODUCT'').table_name  := ''EBA_CUST_PRODUCTS'';',
'    -- TODO: Add other tables here as necessary.',
'',
'    l_tbl := l_tables.FIRST;',
'    while l_tbl is not null loop',
'        for pf in 1..l_postfixes.COUNT loop',
'            merge into eba_cust_flex_registry fr',
'            using ( select l_tables(l_tbl).table_name      flexible_table,',
'                        l_tbl||''_FLEX_''||l_postfixes(pf)   flexible_column,',
'                        --',
'                        case when l_postfixes(pf) = ''CLOB''',
'                            then ''TEXTAREA''',
'                            else ''TEXT''',
'                        end                                display_as,',
'                        case when l_postfixes(pf) = ''CLOB''',
'                            then 80',
'                            else 30',
'                        end                                width,',
'                        case when l_postfixes(pf) = ''CLOB''',
'                            then 30000',
'                            else 4000',
'                        end                                max_width,',
'                        case when l_postfixes(pf) = ''CLOB''',
'                            then 5',
'                            else 1',
'                        end                                height,',
'                        --',
'                        ''select null from eba_cust_flex_registry ''',
'                            ||''where flexible_table = ''''''',
'                            ||l_tables(l_tbl).table_name',
'                            ||'''''' and flexible_column = ''''''',
'                            ||l_tbl||''_FLEX_''||l_postfixes(pf)',
'                            ||'''''' and active_yn = ''''Y''''''',
'                            ||'' and assigned_yn = ''''Y''''''   condition',
'                    from dual',
'                ) src',
'                on ( fr.flexible_table = src.flexible_table',
'                    and fr.flexible_column = src.flexible_column )',
'                when not matched then',
'                    insert (fr.flexible_table,',
'                        fr.flexible_column,',
'                        fr.active_yn,',
'                        fr.form_label_text,',
'                        fr.is_required_yn,',
'                        --',
'                        fr.label_template_id,',
'                        fr.display_as,',
'                        fr.width,',
'                        fr.max_width,',
'                        fr.height,',
'                        fr.is_displayed_on_ir,',
'                        fr.assigned_yn,',
'                        --',
'                        fr.condition_type,',
'                        fr.condition1,',
'                        fr.condition2)',
'                    values (src.flexible_table,',
'                        src.flexible_column,',
'                        ''N'',',
'                        src.flexible_column,',
'                        ''N'',',
'                        --',
'                        0,',
'                        src.display_as,',
'                        src.width,',
'                        src.max_width,',
'                        src.height,',
'                        ''N'',',
'                        ''N'',',
'                        --',
'                        ''EXISTS'',',
'                        src.condition,',
'                        null',
'                    );',
'        end loop;',
'        l_tbl := l_tables.NEXT( l_tbl );',
'    end loop;',
'end;',
'/',
'show errors',
'',
'commit;'))
);
end;
/
